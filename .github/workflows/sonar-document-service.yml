name: Sonar Document Service
on:
  push:
    paths:
      - 'api/document-service/**'
      - '.github/workflows/**'
    branches:
      - develop
      - main
  pull_request:
    paths:
      - 'api/document-service/**'
      - '.github/workflows/**'
    types: [ opened, synchronize, reopened ]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api/document-service
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Create local profile
        with:
          IDENTITY_POOL_URL: ${{ secrets.IDENTITY_POOL_URL }}
        run: |
          echo spring.security.oauth2.resourceserver.jwt.issuer-uri="$IDENTITY_POOL_URL" > ./application-ci.properties
          echo spring.security.oauth2.resourceserver.jwt.jwk-set-uri="$IDENTITY_POOL_URL/.well-known/jwks.json" > ./application-ci.properties
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DOCUMENT_SERVICE }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=com.nhantran.markdowneditor:document-service -Pcoverage -Dspring.profiles.active=ci